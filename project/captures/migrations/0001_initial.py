# Generated by Django 3.2.12 on 2022-02-11 01:09

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Capture',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(error_messages={'unique': 'Código já existe.'}, help_text='Código único de identificação da captura.', max_length=50, unique=True, verbose_name='Código')),
                ('email', models.EmailField(error_messages={'unique': 'Email já existe na base de dados.'}, help_text='Email único do usuário capturado.', max_length=50, unique=True, verbose_name='Email')),
                ('name', models.CharField(help_text='Nome do usuário capturado.', max_length=50, verbose_name='Nome')),
                ('phone', models.CharField(help_text='Telefone capturado do usuário.', max_length=15, verbose_name='Telefone')),
                ('document', models.CharField(help_text='Documento capturado do usuário, pode ser CPF ou CNPJ.', max_length=25, verbose_name='CPF/CNPJ')),
                ('age', models.IntegerField(help_text='Idade capturada do usuário.', null=True, verbose_name='Idade')),
                ('sex', models.CharField(blank=True, choices=[('M', 'Masculino'), ('F', 'Feminino')], help_text='Captura o sexo de uma pessoa. Ex: M ou F', max_length=1, verbose_name='Sexo')),
                ('cep', models.CharField(help_text='Captura do CEP do usuário', max_length=10, verbose_name='CEP')),
                ('state', models.CharField(blank=True, help_text='Estado capturado do usuário.', max_length=50, verbose_name='Estado')),
                ('city', models.CharField(blank=True, help_text='Cidade capturada do usuário', max_length=100, verbose_name='Cidade')),
                ('neighborhood', models.CharField(blank=True, help_text='Bairro capturado do usuário.', max_length=100, verbose_name='Bairro')),
                ('address', models.CharField(blank=True, help_text='Endereço capturado do usuário.', max_length=255, verbose_name='Endereço')),
                ('number', models.CharField(blank=True, help_text='Captura do número do endereço.', max_length=5, verbose_name='Número')),
                ('is_active', models.BooleanField(default=False, help_text='Verifica se o usuário capturado está ativo no sistema.', verbose_name='Está ativo?')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Data na qual a captura foi feita.', verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Data na qual a captura foi atualizada.', verbose_name='Atualizado em')),
            ],
            options={
                'db_table': 'captures',
                'ordering': ('created_at',),
            },
        ),
    ]
